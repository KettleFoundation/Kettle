buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://files.minecraftforge.net/maven' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3+'
        classpath 'net.nemerosa:versioning:2.7.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.patcher'
apply plugin: 'net.minecraftforge.gradle.launch4j'
apply plugin: 'net.nemerosa.versioning'

group 'mc.kettle'
version '1.0.0-SNAPSHOT'

String gitversion = 'git-Kettle-' + versioning.info.build

repositories {
    clear()
    mavenCentral()
    maven { url 'https://files.minecraftforge.net/maven' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://libraries.minecraft.net/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
}


sourceCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

configurations.all {
    transitive = false
}

minecraft {
    version = "1.12.2"
    mappings = "snapshot_nodoc_20171003"
    workspaceDir = "projects"
    versionJson = "jsons/1.12.2-dev.json"
    buildUserdev = true
    buildInstaller = false
    installerVersion = "1.5"

    def common = {
        patchPrefixOriginal "a/"
        patchPrefixChanged "b/"
        mainClassServer "net.minecraft.launchwrapper.Launch"
        tweakClassServer "net.minecraftforge.fml.common.launcher.FMLServerTweaker"
    }

    projects {
        forge {
            rootDir "forge/"
            patchDir "forge/patches/minecraft/"
            patchAfter "clean"
            genPatchesFrom "clean"
            genMcpPatches = false
            applyMcpPatches = false
            s2sKeepImports = true
            with common
        }

        bukkit {
        	rootDir "bukkit/"
        	patchDir "patches/"
        	patchAfter "forge"
        	genPatchesFrom "forge"
        	genMcpPatches = false
        	applyMcpPatches = false
        	s2sKeepImports = true
        	with common
        }

        kettle {
            rootDir "."
            patchDir "patches/"
            patchAfter "bukkit"
            genPatchesFrom "bukkit"
            genMcpPatches = true
            applyMcpPatches = true
            s2sKeepImports = true
            with common
        }
    }
}

sourceCompatibility = 1.8
tasks.generateXmlConfig.dependsOn installer
tasks.compileJava.enabled = false
tasks.build.dependsOn 'launch4j'
tasks.reobfuscate.setProperty("extraSrg", ["PK: org/bukkit/craftbukkit org/bukkit/craftbukkit/v1_12_R1"])

installer {
    classifier = 'installer'
    from "forge/src/main/resources/forge_logo.png"
    rename "forge_logo\\.png", "big_logo.png"
}

launch4j {
    jar = installer.archivePath.canonicalPath
    outfile = file("build/distributions/${project.name}-${project.version}-installer-win.exe").canonicalPath
    icon = file('icon.ico').canonicalPath
    manifest = file('l4jManifest.xml').canonicalPath
    jreMinVersion = '1.8.0'
    initialHeapPercent = 5
    maxHeapPercent = 100
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task signUniversal(type: SignJar, dependsOn: 'outputJar') {
    onlyIf {
        project.hasProperty('jarsigner')
    }

    def jarsigner = [:]

    if (project.hasProperty('jarsigner'))
        jarsigner = project.jarsigner

    alias = 'forge'
    exclude "paulscode/**"
    storePass = jarsigner.storepass
    keyPass = jarsigner.keypass
    keyStore = jarsigner.keystore
    inputFile = outputJar.archivePath
    outputFile = outputJar.archivePath
}

build.dependsOn signUniversal
installer.dependsOn signUniversal

outputJar {
    classifier = 'server'

    manifest.attributes([
            "Implementation-Title": "Kettle",
            "Implementation-Version": gitversion,
            "Main-Class": "net.minecraftforge.fml.relauncher.ServerLaunchWrapper",
            "TweakClass": "net.minecraftforge.fml.common.launcher.FMLTweaker",
            "Class-Path": getServerClasspath(file("jsons/1.12.2-rel.json"))
    ])
}

processJson {
    releaseJson = "jsons/1.12.2-rel.json"
    
    addReplacements([
            "@minecraft_version@": project.minecraft.version,
            "@version@": gitversion,
            "@project@": "kettle",
            "@artifact@": "mc.kettle:kettle:${gitversion}",
            "@universal_jar@": { outputJar.archiveName },
            "@timestamp@": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
    ])
}

genGradleProjects {
    addCompileDep "junit:junit:4.12"
    addCompileDep "org.junit.jupiter:junit-jupiter-api:5.0.0"
    addCompileDep "org.opentest4j:opentest4j:1.0.0"
    addCompileDep "org.hamcrest:hamcrest-core:1.3"
}

import groovy.json.JsonSlurper

String getServerClasspath(File file) {
    def node = new JsonSlurper().parse(file)
    def out = new StringBuilder()
    node.versionInfo.libraries.each { lib ->
        if (lib.serverreq)
        {
            def split = lib.name.split(':')
            def group = split[0].replace('.', '/')
            def artifact = split[1]
            def version = split[2]
            out += "libraries/$group/$artifact/$version/$artifact-${version}.jar "
        }
    }
    out += "minecraft_server.1.12.2.jar"
    return out.toString()
}