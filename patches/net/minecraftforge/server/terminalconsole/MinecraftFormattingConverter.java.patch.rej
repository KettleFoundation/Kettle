++++ REJECTED PATCH 1
 /**
  * Replaces Minecraft formatting codes in the result of a pattern with
  * appropriate ANSI escape codes. The implementation will only replace valid
- * color codes using the section sign (Â§).
+ * color codes using the section sign (ï¿½).
  *
  * <p>The {@link MinecraftFormattingConverter} can be only used together with
  * {@link TerminalConsoleAppender} to detect if the current console supports
++++ END PATCH
++++ REJECTED PATCH 2
 
     private static final String ANSI_RESET = "\u001B[39;0m";
 
-    private static final char COLOR_CHAR = '\u00A7'; // Â§
+    private static final char COLOR_CHAR = '\u00A7'; // ï¿½
     private static final String LOOKUP = "0123456789abcdefklmnor";
 
     private static final String[] ansiCodes = new String[] {
-            "\u001B[0;30;22m", // Black Â§0
-            "\u001B[0;34;22m", // Dark Blue Â§1
-            "\u001B[0;32;22m", // Dark Green Â§2
-            "\u001B[0;36;22m", // Dark Aqua Â§3
-            "\u001B[0;31;22m", // Dark Red Â§4
-            "\u001B[0;35;22m", // Dark Purple Â§5
-            "\u001B[0;33;22m", // Gold Â§6
-            "\u001B[0;37;22m", // Gray Â§7
-            "\u001B[0;30;1m",  // Dark Gray Â§8
-            "\u001B[0;34;1m",  // Blue Â§9
-            "\u001B[0;32;1m",  // Green Â§a
-            "\u001B[0;36;1m",  // Aqua Â§b
-            "\u001B[0;31;1m",  // Red Â§c
-            "\u001B[0;35;1m",  // Light Purple Â§d
-            "\u001B[0;33;1m",  // Yellow Â§e
-            "\u001B[0;37;1m",  // White Â§f
-            "\u001B[5m",       // Obfuscated Â§k
-            "\u001B[21m",      // Bold Â§l
-            "\u001B[9m",       // Strikethrough Â§m
-            "\u001B[4m",       // Underline Â§n
-            "\u001B[3m",       // Italic Â§o
-            ANSI_RESET,        // Reset Â§r
+            "\u001B[0;30;22m", // Black ï¿½0
+            "\u001B[0;34;22m", // Dark Blue ï¿½1
+            "\u001B[0;32;22m", // Dark Green ï¿½2
+            "\u001B[0;36;22m", // Dark Aqua ï¿½3
+            "\u001B[0;31;22m", // Dark Red ï¿½4
+            "\u001B[0;35;22m", // Dark Purple ï¿½5
+            "\u001B[0;33;22m", // Gold ï¿½6
+            "\u001B[0;37;22m", // Gray ï¿½7
+            "\u001B[0;30;1m",  // Dark Gray ï¿½8
+            "\u001B[0;34;1m",  // Blue ï¿½9
+            "\u001B[0;32;1m",  // Green ï¿½a
+            "\u001B[0;36;1m",  // Aqua ï¿½b
+            "\u001B[0;31;1m",  // Red ï¿½c
+            "\u001B[0;35;1m",  // Light Purple ï¿½d
+            "\u001B[0;33;1m",  // Yellow ï¿½e
+            "\u001B[0;37;1m",  // White ï¿½f
+            "\u001B[5m",       // Obfuscated ï¿½k
+            "\u001B[21m",      // Bold ï¿½l
+            "\u001B[9m",       // Strikethrough ï¿½m
+            "\u001B[4m",       // Underline ï¿½n
+            "\u001B[3m",       // Italic ï¿½o
+            ANSI_RESET,        // Reset ï¿½r
     };
 
     private final boolean ansi;
++++ END PATCH
