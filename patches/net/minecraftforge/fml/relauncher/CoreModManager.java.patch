--- ../src-base/minecraft/net/minecraftforge/fml/relauncher/CoreModManager.java
+++ ../src-work/minecraft/net/minecraftforge/fml/relauncher/CoreModManager.java
@@ -76,14 +76,13 @@
     private static List<String> ignoredModFiles = Lists.newArrayList();
     private static Map<String, List<String>> transformers = Maps.newHashMap();
     private static List<FMLPluginWrapper> loadPlugins;
+    public static boolean deobfuscatedEnvironment;
     private static FMLTweaker tweaker;
     private static File mcDir;
     private static List<String> candidateModFiles = Lists.newArrayList();
     private static List<String> accessTransformers = Lists.newArrayList();
     private static Set<String> rootNames = Sets.newHashSet();
 
-    static boolean deobfuscatedEnvironment;
-
     static
     {
         for(String cls : rootPlugins)
@@ -486,11 +485,10 @@
         try
         {
             coreModDir = coreModDir.getCanonicalFile();
+        } catch (IOException e) {
+            throw new RuntimeException(String.format("Unable to canonicalize the coremod dir at %s", mcDir.getName()),
+                    e);
         }
-        catch (IOException e)
-        {
-            throw new RuntimeException(String.format("Unable to canonicalize the coremod dir at %s", mcDir.getName()), e);
-        }
         if (!coreModDir.exists())
         {
             coreModDir.mkdir();
@@ -542,6 +540,10 @@
                 FMLLog.log.error("The coremod {} is requesting minecraft version {} and minecraft is {}. It will be ignored.", coreModClass,
                         requiredMCVersion.value(), FMLInjectionData.mccversion);
                 return null;
+            } else if (requiredMCVersion != null) {
+                FMLLog.log.debug(
+                        "The coremod {} requested minecraft version {} and minecraft is {}. It will be loaded.",
+                        coreModClass, requiredMCVersion.value(), FMLInjectionData.mccversion);
             }
             else if (requiredMCVersion != null)
             {
