--- ../src-base/minecraft/net/minecraftforge/fml/common/registry/EntityRegistry.java
+++ ../src-work/minecraft/net/minecraftforge/fml/common/registry/EntityRegistry.java
@@ -19,6 +19,9 @@
 
 package net.minecraftforge.fml.common.registry;
 
+import com.google.common.collect.Maps;
+import net.minecraftforge.fml.common.Loader;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityList.EntityEggInfo;
 import net.minecraft.entity.EntityLiving;
@@ -148,6 +151,9 @@
     private final BiMap<Class<? extends Entity>, EntityRegistration> entityClassRegistrations = HashBiMap.create();
     private final Map<Class<? extends Entity>, EntityEntry> entityClassEntries = GameData.getEntityClassMap();
 
+    public static Map<Class<? extends Entity>, String> entityTypeMap = Maps.newHashMap(); // used by CraftCustomEntity
+    public static Map<String, Class<? extends Entity>> entityClassMap = Maps.newHashMap(); // user by CraftWorld
+
     public static EntityRegistry instance()
     {
         return INSTANCE;
@@ -171,6 +177,7 @@
     public static void registerModEntity(ResourceLocation registryName, Class<? extends Entity> entityClass, String entityName, int id, Object mod, int trackingRange, int updateFrequency, boolean sendsVelocityUpdates)
     {
         instance().doModEntityRegistration(registryName, entityClass, entityName, id, mod, trackingRange, updateFrequency, sendsVelocityUpdates);
+        registerBukkitType(entityClass, entityName);
     }
 
     /**
@@ -191,6 +198,7 @@
     {
         instance().doModEntityRegistration(registryName, entityClass, entityName, id, mod, trackingRange, updateFrequency, sendsVelocityUpdates);
         EntityRegistry.registerEgg(registryName, eggPrimary, eggSecondary);
+        registerBukkitType(entityClass, entityName);
     }
 
     private void doModEntityRegistration(ResourceLocation registryName, Class<? extends Entity> entityClass, String entityName, int id, Object mod, int trackingRange, int updateFrequency, boolean sendsVelocityUpdates)
@@ -385,4 +393,23 @@
         this.entityClassRegistrations.put(entity, registration);
         this.entityRegistrations.put(registration.container, registration);
     }
+
+    private static void registerBukkitType(Class<? extends Entity> entityClass, String entityName) {
+        ModContainer activeModContainer = Loader.instance().activeModContainer();
+        String modId = "unknown";
+        // fixup bad entity names from mods
+        if (entityName.contains(".")) {
+            if ((entityName.indexOf(".") + 1) < entityName.length())
+                entityName = entityName.substring(entityName.indexOf(".") + 1, entityName.length());
+        }
+        entityName = entityName.replace("entity", "");
+        if (entityName.startsWith("ent"))
+            entityName = entityName.replace("ent", "");
+        entityName = entityName.replaceAll("[^A-Za-z0-9]", ""); // remove all non-digits/alphanumeric
+        if (activeModContainer != null)
+            modId = activeModContainer.getModId();
+        entityName = modId + "-" + entityName;
+        entityTypeMap.put(entityClass, entityName);
+        entityClassMap.put(entityName, entityClass);
+    }
 }
