--- ../src-base/minecraft/net/minecraft/item/crafting/CraftingManager.java
+++ ../src-work/minecraft/net/minecraft/item/crafting/CraftingManager.java
@@ -36,12 +36,13 @@
 {
     private static final Logger LOGGER = LogManager.getLogger();
     private static int nextAvailableId;
-    public static final RegistryNamespaced<ResourceLocation, IRecipe> REGISTRY = net.minecraftforge.registries.GameData.getWrapper(IRecipe.class);
+    public static RegistryNamespaced<ResourceLocation, IRecipe> REGISTRY = net.minecraftforge.registries.GameData.getWrapper(IRecipe.class);
 
     public static boolean init()
     {
         try
         {
+            CraftingManager.nextAvailableId = 0; // Reset recipe ID count
             register("armordye", new RecipesArmorDyes());
             register("bookcloning", new RecipeBookCloning());
             register("mapcloning", new RecipesMapCloning());
@@ -188,6 +189,7 @@
         }
         else
         {
+            recipe.setKey(name);
             REGISTRY.register(nextAvailableId++, name, recipe);
         }
     }
@@ -201,7 +203,7 @@
                 return irecipe.getCraftingResult(craftMatrix);
             }
         }
-
+        craftMatrix.currentRecipe = null; // CraftBukkit - Clear recipe when no recipe is found
         return ItemStack.EMPTY;
     }
 
@@ -212,10 +214,12 @@
         {
             if (irecipe.matches(craftMatrix, worldIn))
             {
+                craftMatrix.currentRecipe = irecipe; // CraftBukkit
                 return irecipe;
             }
         }
 
+        craftMatrix.currentRecipe = null; // CraftBukkit - Clear recipe when no recipe is found
         return null;
     }
 
