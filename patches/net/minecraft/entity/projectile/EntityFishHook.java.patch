--- ../src-base/minecraft/net/minecraft/entity/projectile/EntityFishHook.java
+++ ../src-work/minecraft/net/minecraft/entity/projectile/EntityFishHook.java
@@ -32,20 +32,23 @@
 import net.minecraft.world.storage.loot.LootTableList;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import org.bukkit.entity.Fish;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerFishEvent;
 
 public class EntityFishHook extends Entity
 {
     private static final DataParameter<Integer> DATA_HOOKED_ENTITY = EntityDataManager.<Integer>createKey(EntityFishHook.class, DataSerializers.VARINT);
     private boolean inGround;
     private int ticksInGround;
-    private EntityPlayer angler;
+    public EntityPlayer angler;
     private int ticksInAir;
     private int ticksCatchable;
     private int ticksCaughtDelay;
     private int ticksCatchableDelay;
     private float fishApproachAngle;
     public Entity caughtEntity;
-    private EntityFishHook.State currentState = EntityFishHook.State.FLYING;
+    private State currentState = State.FLYING;
     private int luck;
     private int lureSpeed;
 
@@ -169,14 +172,14 @@
                 f = BlockLiquid.getBlockLiquidHeight(iblockstate, this.world, blockpos);
             }
 
-            if (this.currentState == EntityFishHook.State.FLYING)
+            if (this.currentState == State.FLYING)
             {
                 if (this.caughtEntity != null)
                 {
                     this.motionX = 0.0D;
                     this.motionY = 0.0D;
                     this.motionZ = 0.0D;
-                    this.currentState = EntityFishHook.State.HOOKED_IN_ENTITY;
+                    this.currentState = State.HOOKED_IN_ENTITY;
                     return;
                 }
 
@@ -185,7 +188,7 @@
                     this.motionX *= 0.3D;
                     this.motionY *= 0.2D;
                     this.motionZ *= 0.3D;
-                    this.currentState = EntityFishHook.State.BOBBING;
+                    this.currentState = State.BOBBING;
                     return;
                 }
 
@@ -208,14 +211,14 @@
             }
             else
             {
-                if (this.currentState == EntityFishHook.State.HOOKED_IN_ENTITY)
+                if (this.currentState == State.HOOKED_IN_ENTITY)
                 {
                     if (this.caughtEntity != null)
                     {
                         if (this.caughtEntity.isDead)
                         {
                             this.caughtEntity = null;
-                            this.currentState = EntityFishHook.State.FLYING;
+                            this.currentState = State.FLYING;
                         }
                         else
                         {
@@ -230,7 +233,7 @@
                     return;
                 }
 
-                if (this.currentState == EntityFishHook.State.BOBBING)
+                if (this.currentState == State.BOBBING)
                 {
                     this.motionX *= 0.9D;
                     this.motionZ *= 0.9D;
@@ -356,6 +359,7 @@
 
         if (raytraceresult != null && raytraceresult.typeOfHit != RayTraceResult.Type.MISS)
         {
+            org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this, raytraceresult); // Craftbukkit - Call event
             if (raytraceresult.typeOfHit == RayTraceResult.Type.ENTITY)
             {
                 this.caughtEntity = raytraceresult.entityHit;
@@ -397,6 +401,10 @@
             {
                 this.ticksCaughtDelay = 0;
                 this.ticksCatchableDelay = 0;
+                // CraftBukkit start
+                PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), null, (Fish) this.getBukkitEntity(), PlayerFishEvent.State.FAILED_ATTEMPT);
+                this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+                // CraftBukkit end
             }
             else
             {
@@ -433,6 +441,13 @@
             }
             else
             {
+
+                PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), null, (Fish) this.getBukkitEntity(), PlayerFishEvent.State.BITE);
+                this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+                if (playerFishEvent.isCancelled()) {
+                    return;
+                }
+                // CraftBukkit end
                 this.motionY = (double)(-0.4F * MathHelper.nextFloat(this.rand, 0.6F, 1.0F));
                 this.playSound(SoundEvents.ENTITY_BOBBER_SPLASH, 0.25F, 1.0F + (this.rand.nextFloat() - this.rand.nextFloat()) * 0.4F);
                 double d3 = this.getEntityBoundingBox().minY + 0.5D;
@@ -509,6 +524,11 @@
             net.minecraftforge.event.entity.player.ItemFishedEvent event = null;
             if (this.caughtEntity != null)
             {
+                PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), this.caughtEntity.getBukkitEntity(), (Fish) this.getBukkitEntity(), PlayerFishEvent.State.CAUGHT_ENTITY);
+                this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+                if (playerFishEvent.isCancelled()) {
+                    return 0;
+                }
                 this.bringInHookedEntity();
                 this.world.setEntityState(this, (byte)31);
                 i = this.caughtEntity instanceof EntityItem ? 3 : 5;
@@ -529,6 +549,15 @@
                 for (ItemStack itemstack : result)
                 {
                     EntityItem entityitem = new EntityItem(this.world, this.posX, this.posY, this.posZ, itemstack);
+                    // CraftBukkit start
+                    PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), entityitem.getBukkitEntity(), (Fish) this.getBukkitEntity(), PlayerFishEvent.State.CAUGHT_FISH);
+                    playerFishEvent.setExpToDrop(this.rand.nextInt(6) + 1);
+                    this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+
+                    if (playerFishEvent.isCancelled()) {
+                        return 0;
+                    }
+                    // CraftBukkit end
                     double d0 = this.angler.posX - this.posX;
                     double d1 = this.angler.posY - this.posY;
                     double d2 = this.angler.posZ - this.posZ;
@@ -538,7 +567,12 @@
                     entityitem.motionY = d1 * 0.1D + (double)MathHelper.sqrt(d3) * 0.08D;
                     entityitem.motionZ = d2 * 0.1D;
                     this.world.spawnEntity(entityitem);
-                    this.angler.world.spawnEntity(new EntityXPOrb(this.angler.world, this.angler.posX, this.angler.posY + 0.5D, this.angler.posZ + 0.5D, this.rand.nextInt(6) + 1));
+                    // this.angler.world.spawnEntity(new EntityXPOrb(this.angler.world, this.angler.posX, this.angler.posY + 0.5D, this.angler.posZ + 0.5D, this.rand.nextInt(6) + 1));
+                    // CraftBukkit start - this.random.nextInt(6) + 1 -> playerFishEvent.getExpToDrop()
+                    if (playerFishEvent.getExpToDrop() > 0) {
+                        this.angler.world.spawnEntity(new EntityXPOrb(this.angler.world, this.angler.posX, this.angler.posY + 0.5D, this.angler.posZ + 0.5D, playerFishEvent.getExpToDrop()));
+                    }
+                    // CraftBukkit end
                     Item item = itemstack.getItem();
 
                     if (item == Items.FISH || item == Items.COOKED_FISH)
@@ -552,8 +586,25 @@
 
             if (this.inGround)
             {
+                // CraftBukkit start
+                PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), null, (Fish) this.getBukkitEntity(), PlayerFishEvent.State.IN_GROUND);
+                this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+
+                if (playerFishEvent.isCancelled()) {
+                    return 0;
+                }
+                // CraftBukkit end
                 i = 2;
             }
+            // CraftBukkit start
+            if (i == 0) {
+                PlayerFishEvent playerFishEvent = new PlayerFishEvent((Player) this.angler.getBukkitEntity(), null, (Fish) this.getBukkitEntity(), PlayerFishEvent.State.FAILED_ATTEMPT);
+                this.world.getServer().getPluginManager().callEvent(playerFishEvent);
+                if (playerFishEvent.isCancelled()) {
+                    return 0;
+                }
+            }
+            // CraftBukkit end
 
             this.setDead();
             return event == null ? i : event.getRodDamage();
