--- ../src-base/minecraft/net/minecraft/server/management/PlayerInteractionManager.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerInteractionManager.java
@@ -1,19 +1,23 @@
 package net.minecraft.server.management;
 
-import net.minecraft.block.Block;
-import net.minecraft.block.BlockChest;
-import net.minecraft.block.BlockCommandBlock;
-import net.minecraft.block.BlockStructure;
+import net.minecraft.block.*;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.enchantment.EnchantmentHelper;
+import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.player.EntityPlayerMP;
+import net.minecraft.init.Blocks;
+import net.minecraft.init.Enchantments;
+import net.minecraft.inventory.EntityEquipmentSlot;
 import net.minecraft.inventory.IInventory;
 import net.minecraft.item.ItemBlock;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.ItemSword;
 import net.minecraft.network.play.server.SPacketBlockChange;
+import net.minecraft.network.play.server.SPacketCloseWindow;
 import net.minecraft.network.play.server.SPacketPlayerListItem;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityChest;
 import net.minecraft.util.ActionResult;
@@ -25,7 +29,14 @@
 import net.minecraft.world.ILockableContainer;
 import net.minecraft.world.World;
 import net.minecraft.world.WorldServer;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.Event;
+import org.bukkit.event.block.Action;
+import org.bukkit.event.block.BlockBreakEvent;
+import org.bukkit.event.player.PlayerInteractEvent;
 
+import java.util.ArrayList;
+
 public class PlayerInteractionManager
 {
     public World world;
@@ -50,7 +61,7 @@
         this.gameType = type;
         type.configurePlayerCapabilities(this.player.capabilities);
         this.player.sendPlayerAbilities();
-        this.player.mcServer.getPlayerList().sendPacketToAllPlayers(new SPacketPlayerListItem(SPacketPlayerListItem.Action.UPDATE_GAME_MODE, new EntityPlayerMP[] {this.player}));
+        this.player.mcServer.getPlayerList().sendAll(new SPacketPlayerListItem(SPacketPlayerListItem.Action.UPDATE_GAME_MODE, new EntityPlayerMP[] {this.player}), this.player); // CraftBukkit
         this.world.updateAllPlayersSleepingFlag();
     }
 
@@ -81,7 +92,7 @@
 
     public void updateBlockRemoving()
     {
-        ++this.curblockDamage;
+        this.curblockDamage = MinecraftServer.currentTick;  // CraftBukkit
 
         if (this.receivedFinishDiggingPacket)
         {
@@ -137,6 +148,19 @@
 
     public void onBlockClicked(BlockPos pos, EnumFacing side)
     {
+        // CraftBukkit start
+        PlayerInteractEvent playerinteractevent = CraftEventFactory.callPlayerInteractEvent(this.player, Action.LEFT_CLICK_BLOCK, pos, side, this.player.inventory.getCurrentItem(), EnumHand.MAIN_HAND);
+        if (playerinteractevent.isCancelled()) {
+            // Let the client know the block still exists
+            this.player.connection.sendPacket(new SPacketBlockChange(this.world, pos));
+            // Update any tile entity data for this block
+            TileEntity tileentity = this.world.getTileEntity(pos);
+            if (tileentity != null) {
+                this.player.connection.sendPacket(tileentity.getUpdatePacket());
+            }
+            return;
+        }
+        // CraftBukkit end
         double reachDist = player.getEntityAttribute(EntityPlayer.REACH_DISTANCE).getAttributeValue();
         net.minecraftforge.event.entity.player.PlayerInteractEvent.LeftClickBlock event = net.minecraftforge.common.ForgeHooks.onLeftClickBlock(player, pos, side, net.minecraftforge.common.ForgeHooks.rayTraceEyeHitVec(player, reachDist + 1));
         if (event.isCanceled())
@@ -185,11 +209,24 @@
             this.initialDamage = this.curblockDamage;
             float f = 1.0F;
 
-            if (!iblockstate.getBlock().isAir(iblockstate, world, pos))
-            {
+            // CraftBukkit start - Swings at air do *NOT* exist.
+            if (playerinteractevent.useInteractedBlock() == Event.Result.DENY) {
+                // If we denied a door from opening, we need to send a correcting update to the client, as it already opened the door.
+                IBlockState data = this.world.getBlockState(pos);
+                if (block == Blocks.OAK_DOOR) {
+                    // For some reason *BOTH* the bottom/top part have to be marked updated.
+                    boolean bottom = data.getValue(BlockDoor.HALF) == BlockDoor.EnumDoorHalf.LOWER;
+                    ((EntityPlayerMP) this.player).connection.sendPacket(new SPacketBlockChange(this.world, pos));
+                    ((EntityPlayerMP) this.player).connection.sendPacket(new SPacketBlockChange(this.world, bottom ? pos.up() : pos.down()));
+                } else if (block == Blocks.TRAPDOOR) {
+
+                    ((EntityPlayerMP) this.player).connection.sendPacket(new SPacketBlockChange(this.world, pos));
+                }
+            } else if (iblockstate.getMaterial() != Material.AIR) {
                 if (event.getUseBlock() != net.minecraftforge.fml.common.eventhandler.Event.Result.DENY)
                 {
                     block.onBlockClicked(this.world, pos, this.player);
+                    // Allow fire punching to be blocked
                     this.world.extinguishFire((EntityPlayer)null, pos, side);
                 }
                 else
@@ -200,6 +237,26 @@
                 }
                 f = iblockstate.getPlayerRelativeBlockHardness(this.player, this.player.world, pos);
             }
+            if (playerinteractevent.useItemInHand() == Event.Result.DENY) {
+                // If we 'insta destroyed' then the client needs to be informed.
+                if (f > 1.0f) {
+                    ((EntityPlayerMP) this.player).connection.sendPacket(new SPacketBlockChange(this.world, pos));
+                }
+                return;
+            }
+            org.bukkit.event.block.BlockDamageEvent blockEvent = CraftEventFactory.callBlockDamageEvent(this.player, pos.getX(), pos.getY(), pos.getZ(), this.player.inventory.getCurrentItem(), f >= 1.0f);
+
+            if (blockEvent.isCancelled()) {
+                // Let the client know the block still exists
+                ((EntityPlayerMP) this.player).connection.sendPacket(new SPacketBlockChange(this.world, pos));
+                return;
+            }
+
+            if (blockEvent.getInstaBreak()) {
+                f = 2.0f;
+            }
+            // CraftBukkit end
+
             if (event.getUseItem() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY)
             {
                 if (f >= 1.0F)
@@ -221,6 +278,7 @@
                 this.destroyPos = pos;
                 int i = (int)(f * 10.0F);
                 this.world.sendBlockBreakProgress(this.player.getEntityId(), pos, i);
+                this.player.connection.sendPacket(new SPacketBlockChange(world, pos)); // Paper - MC-54026 - backport from 1.13
                 this.durabilityRemainingOnBlock = i;
             }
         }
@@ -230,6 +288,7 @@
     {
         if (pos.equals(this.destroyPos))
         {
+            this.curblockDamage = MinecraftServer.currentTick; // CraftBukkit
             int i = this.curblockDamage - this.initialDamage;
             IBlockState iblockstate = this.world.getBlockState(pos);
 
@@ -251,6 +310,15 @@
                     this.initialBlockDamage = this.initialDamage;
                 }
             }
+        } else {
+            // CraftBukkit start - Force block reset to client
+            this.player.connection.sendPacket(new SPacketBlockChange(this.world, pos));
+            // CraftBukkit end
+            // update TE for this block
+            TileEntity tileentity = this.world.getTileEntity(pos);
+            if (tileentity != null) {
+                this.player.connection.sendPacket(tileentity.getUpdatePacket());
+            }
         }
     }
 
@@ -331,7 +399,7 @@
                 // Drop experience
                 if (!this.isCreative() && flag1 && exp > 0)
                 {
-                    iblockstate.getBlock().dropXpOnBlockBreak(world, pos, exp);
+                    iblockstate.getBlock().dropXpOnBlockBreak(world, pos, exp, this.player);
                 }
                 return flag1;
             }
@@ -396,9 +464,58 @@
         }
     }
 
+    public boolean interactResult = false;
+    public boolean firedInteract = false;
+
     public EnumActionResult processRightClickBlock(EntityPlayer player, World worldIn, ItemStack stack, EnumHand hand, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ)
     {
-        if (this.gameType == GameType.SPECTATOR)
+        IBlockState blockdata = worldIn.getBlockState(pos);
+
+ 		if (blockdata.getBlock() != Blocks.AIR) {
+        boolean cancelledBlock = false;
+
+        if (this.gameType == GameType.SPECTATOR) {
+            TileEntity tileentity = worldIn.getTileEntity(pos);
+            cancelledBlock = !(tileentity instanceof ILockableContainer || tileentity instanceof IInventory);
+        }
+
+        if (!player.getBukkitEntity().isOp() && stack != null && Block.getBlockFromItem(stack.getItem()) instanceof BlockCommandBlock) {
+        cancelledBlock = true;
+        }
+
+
+        PlayerInteractEvent playerInteractEvent = CraftEventFactory.callPlayerInteractEvent(player, Action.RIGHT_CLICK_BLOCK, pos, facing, stack, cancelledBlock, hand);
+        firedInteract = true;
+        interactResult = playerInteractEvent.useItemInHand() == Event.Result.DENY;
+
+        if (playerInteractEvent.useInteractedBlock() == Event.Result.DENY) {
+            // If we denied a door from opening, we need to send a correcting update to the client, as it already opened the door.
+            if (blockdata.getBlock() instanceof BlockDoor) {
+                boolean bottom = blockdata.getValue(BlockDoor.HALF) == BlockDoor.EnumDoorHalf.LOWER;
+                ((EntityPlayerMP) player).connection.sendPacket(new SPacketBlockChange(worldIn, bottom ? pos.up() : pos.down()));
+            } else if (blockdata.getBlock() instanceof BlockCake) {
+                ((EntityPlayerMP) player).getBukkitEntity().sendHealthUpdate(); // SPIGOT-1341 - reset health for cake
+                // Paper start - extend Player Interact cancellation
+            } else if (blockdata.getBlock() instanceof BlockStructure) {
+                ((EntityPlayerMP) player).connection.sendPacket(new SPacketCloseWindow());
+            } else if (blockdata.getBlock() instanceof BlockCommandBlock) {
+                ((EntityPlayerMP) player).connection.sendPacket(new SPacketCloseWindow());
+            } else if (blockdata.getBlock() instanceof BlockFlowerPot) {
+                // Send a block change to air and then send back the correct block, just to make the client happy
+                SPacketBlockChange packet = new SPacketBlockChange(worldIn, pos);
+                packet.blockState = Blocks.AIR.getDefaultState();
+                this.player.connection.sendPacket(packet);
+                this.player.connection.sendPacket(new SPacketBlockChange(worldIn, pos));
+                TileEntity tileentity = worldIn.getTileEntity(pos);
+                if (tileentity != null) {
+                    ((EntityPlayerMP) player).connection.sendPacket(tileentity.getUpdatePacket());
+                }
+                // Paper end - extend Player Interact cancellation
+            }
+            ((EntityPlayerMP) player).getBukkitEntity().updateInventory(); // SPIGOT-2867
+            return (playerInteractEvent.useItemInHand() != Event.Result.ALLOW) ? EnumActionResult.SUCCESS : EnumActionResult.PASS;
+        }
+        else if (this.gameType == GameType.SPECTATOR)
         {
             TileEntity tileentity = worldIn.getTileEntity(pos);
 
@@ -460,7 +577,7 @@
             {
                 return EnumActionResult.PASS;
             }
-            else
+            else if (!interactResult)
             {
                 if (stack.getItem() instanceof ItemBlock && !player.canUseCommandBlock())
                 {
@@ -496,6 +613,8 @@
             }
         }
     }
+        return EnumActionResult.FAIL;
+    }
 
     public void setWorld(WorldServer serverWorld)
     {
