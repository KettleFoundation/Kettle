--- ../src-base/minecraft/net/minecraft/server/management/PlayerProfileCache.java
+++ ../src-work/minecraft/net/minecraft/server/management/PlayerProfileCache.java
@@ -45,9 +45,9 @@
 {
     public static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z");
     private static boolean onlineMode;
-    private final Map<String, PlayerProfileCache.ProfileEntry> usernameToProfileEntryMap = Maps.<String, PlayerProfileCache.ProfileEntry>newHashMap();
-    private final Map<UUID, PlayerProfileCache.ProfileEntry> uuidToProfileEntryMap = Maps.<UUID, PlayerProfileCache.ProfileEntry>newHashMap();
-    private final Deque<GameProfile> gameProfiles = Lists.<GameProfile>newLinkedList();
+    private final Map<String, ProfileEntry> usernameToProfileEntryMap = Maps.<String, ProfileEntry>newHashMap();
+    private final Map<UUID, ProfileEntry> uuidToProfileEntryMap = Maps.<UUID, ProfileEntry>newHashMap();
+    private final Deque<GameProfile> gameProfiles = new java.util.concurrent.LinkedBlockingDeque<>();
     private final GameProfileRepository profileRepo;
     protected final Gson gson;
     private final File usercacheFile;
@@ -93,8 +93,7 @@
         };
         profileRepoIn.findProfilesByNames(new String[] {name}, Agent.MINECRAFT, profilelookupcallback);
 
-        if (!isOnlineMode() && agameprofile[0] == null)
-        {
+        if (!isOnlineMode() && agameprofile[0] == null && !org.apache.commons.lang3.StringUtils.isBlank(name)) { // Paper - Don't lookup a profile with a blank name
             UUID uuid = EntityPlayer.getUUID(new GameProfile((UUID)null, name));
             GameProfile gameprofile = new GameProfile(uuid, name);
             profilelookupcallback.onProfileLookupSucceeded(gameprofile);
@@ -143,7 +142,7 @@
         this.usernameToProfileEntryMap.put(gameProfile.getName().toLowerCase(Locale.ROOT), playerprofilecache$profileentry);
         this.uuidToProfileEntryMap.put(uuid, playerprofilecache$profileentry);
         this.gameProfiles.addFirst(gameProfile);
-        this.save();
+        if(!org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly) this.save(); // Spigot - skip saving if disabled
     }
 
     @Nullable
@@ -177,7 +176,7 @@
             }
         }
 
-        this.save();
+        if(!org.spigotmc.SpigotConfig.saveUserCacheOnStopOnly) this.save(); // Spigot - skip saving if disabled
         return playerprofilecache$profileentry == null ? null : playerprofilecache$profileentry.getGameProfile();
     }
 
@@ -187,6 +186,13 @@
         return (String[])list.toArray(new String[list.size()]);
     }
 
+    // Paper start
+    @Nullable public GameProfile getProfileIfCached(String name) {
+        ProfileEntry entry = this.usernameToProfileEntryMap.get(name.toLowerCase(Locale.ROOT));
+        return entry == null ? null : entry.gameProfile;
+    }
+    // Paper end
+
     @Nullable
     public GameProfile getProfileByUUID(UUID uuid)
     {
