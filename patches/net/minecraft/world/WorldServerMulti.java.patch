--- ../src-base/minecraft/net/minecraft/world/WorldServerMulti.java
+++ ../src-work/minecraft/net/minecraft/world/WorldServerMulti.java
@@ -7,12 +7,54 @@
 import net.minecraft.world.border.WorldBorder;
 import net.minecraft.world.storage.DerivedWorldInfo;
 import net.minecraft.world.storage.ISaveHandler;
+import net.minecraft.world.storage.WorldInfo;
 
 public class WorldServerMulti extends WorldServer
 {
     private final WorldServer delegate;
     private IBorderListener borderListener;
 
+    // CraftBukkit start - Add WorldInfo, Environment and ChunkGenerator arguments
+    public WorldServerMulti(MinecraftServer server, ISaveHandler saveHandlerIn, int dimensionId, WorldServer delegate, Profiler profilerIn, WorldInfo worldData, org.bukkit.World.Environment env, org.bukkit.generator.ChunkGenerator gen)
+    {
+        super(server, saveHandlerIn, worldData, dimensionId, profilerIn, env, gen);
+        this.delegate = delegate;
+        /* CraftBukkit start
+        this.borderListener = new IBorderListener()
+        {
+            public void onSizeChanged(WorldBorder border, double newSize)
+            {
+                WorldServerMulti.this.getWorldBorder().setTransition(newSize);
+            }
+            public void onTransitionStarted(WorldBorder border, double oldSize, double newSize, long time)
+            {
+                WorldServerMulti.this.getWorldBorder().setTransition(oldSize, newSize, time);
+            }
+            public void onCenterChanged(WorldBorder border, double x, double z)
+            {
+                WorldServerMulti.this.getWorldBorder().setCenter(x, z);
+            }
+            public void onWarningTimeChanged(WorldBorder border, int newTime)
+            {
+                WorldServerMulti.this.getWorldBorder().setWarningTime(newTime);
+            }
+            public void onWarningDistanceChanged(WorldBorder border, int newDistance)
+            {
+                WorldServerMulti.this.getWorldBorder().setWarningDistance(newDistance);
+            }
+            public void onDamageAmountChanged(WorldBorder border, double newAmount)
+            {
+                WorldServerMulti.this.getWorldBorder().setDamageAmount(newAmount);
+            }
+            public void onDamageBufferChanged(WorldBorder border, double newSize)
+            {
+                WorldServerMulti.this.getWorldBorder().setDamageBuffer(newSize);
+            }
+        };
+        this.delegate.getWorldBorder().addListener(this.borderListener);
+        // CraftBukkit end */
+    }
+
     public WorldServerMulti(MinecraftServer server, ISaveHandler saveHandlerIn, int dimensionId, WorldServer delegate, Profiler profilerIn)
     {
         super(server, saveHandlerIn, new DerivedWorldInfo(delegate.getWorldInfo()), dimensionId, profilerIn);
@@ -77,7 +119,8 @@
         }
 
         this.initCapabilities();
-        return this;
+        // return this;
+        return super.init(); // CraftBukkit
     }
 
 
